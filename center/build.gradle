plugins {
    id 'java'
    id 'org.springframework.boot'
}
apply from: "${project.rootDir}/quality/checkstyle.gradle"
group = 'com.microsoft.hydralab'
version = hydraLabVersion

sourceCompatibility = 11
targetCompatibility = 11

classes.finalizedBy checkstyleMain
bootJar.dependsOn("checkstyleMain")

repositories {
    mavenCentral()
}

bootJar {
    // Specify the out jar file name so that the dockerfile could copy it
    // without concerning the name change caused by version change.
    archiveName "center.jar"
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

dependencies {
    testImplementation 'org.mockito:mockito-core:3.12.4'
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: springBootWebVersion
    testImplementation 'me.paulschwarz:spring-dotenv:2.3.0'

    compile project(":common")
    compile project(":taps_to_cases:runner")

    compile(group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: springBootWebVersion)
    compile(group: 'org.springframework.boot', name: 'spring-boot-starter-websocket', version: springBootWebVersion)
    compile(group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: springBootWebVersion)
    compile(group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: springBootWebVersion)
    compile(group: 'org.springframework.boot', name: 'spring-boot-starter-cache', version: springBootWebVersion)
    compile(group: 'net.sf.ehcache', name: 'ehcache', version: '2.10.8')

    compile(group: 'org.springframework.security.oauth.boot', name: 'spring-security-oauth2-autoconfigure', version: springBootWebVersion)

    compile group: 'org.hibernate', name: 'hibernate-entitymanager', version: '5.4.6.Final'

    compile group: 'org.apache.commons', name: 'commons-pool2', version: '2.7.0'

    compile group: 'com.microsoft.sqlserver', name: 'mssql-jdbc', version: '7.4.0.jre8'
//    compile group: 'org.postgresql', name: 'postgresql', version: '42.2.14'

    compile group: 'org.springframework.security', name: 'spring-security-oauth2-client', version: '5.2.2.RELEASE'
    compile group: 'com.azure', name: 'azure-ai-openai', version: '1.0.0-beta.3'

    compile('org.springdoc:springdoc-openapi-core:1.1.49')
    compile('org.springdoc:springdoc-openapi-ui:1.4.1')

    compile group: 'org.jsoup', name: 'jsoup', version: '1.10.1'
    compile group: 'org.yaml', name: 'snakeyaml', version: '1.25'

    compile 'org.jetbrains.kotlin:kotlin-reflect:1.5.31'

    compile 'org.xerial:sqlite-jdbc:3.36.0.2'
    compile 'com.github.gwenn:sqlite-dialect:0.1.2'

    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
}

import org.apache.tools.ant.taskdefs.condition.Os
String npmCommand = 'npm'
if (Os.isFamily(Os.FAMILY_WINDOWS)) {
    npmCommand = 'npm.cmd'
}
String reactDir = "${projectDir.parentFile.absolutePath}${File.separator}react"
task installWebFront(type: Exec, group: 'build') {
    workingDir reactDir
    commandLine npmCommand, 'ci'
}

task buildWebFront(type: Exec, group: 'build', dependsOn: installWebFront) {
    workingDir reactDir
    commandLine npmCommand, 'run', 'pub'
}
