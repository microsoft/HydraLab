<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%d %p (%logger{5} - %file:%line\)[%t] - %m%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <appender name="syslog"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>./log/test_lab_current.log</File>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- http://logback.qos.ch/manual/appenders.html fileNamePattern -->
            <!-- http://logback.qos.ch/codes.html#sat_missing_integer_token The %i conversion token is mandatory for size and time based archiving.
            In case the %i token is missing, SizeAndTimeBasedFNATP attached to RollingFileAppender will detect the omission and will not start. -->
            <fileNamePattern>./log/%d/test_lab.%d.%i.log</fileNamePattern>
            <maxHistory>30</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>10MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>%d %p (%logger{5} - %file:%line\)[%t] - %m%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <appender name="accessLog"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>./access_log/test_lab_current.log</File>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>./access_log/%d/test_lab.%d.%i.log</fileNamePattern>
            <maxHistory>30</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>10MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>%d %p (%logger{5} - %file:%line\)[%t] - %m%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <appender name="errorAlarm" class="com.microsoft.hydralab.common.exception.handler.LogbackExceptionHandler">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
    </appender>

    <appender name="warnAlarm" class="com.microsoft.hydralab.common.exception.handler.LogbackExceptionHandler">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>WARN</level>
        </filter>
    </appender>

    <root level="info">
        <appender-ref ref="STDOUT"/>
    </root>
    <root level="warn" additivity="false">
        <appender-ref ref="syslog"/>
    </root>
    <!-- FATAL > ERROR > WARN > INFO > DEBUG > TRACE  -->
    <logger name="com.microsoft" level="debug" additivity="false">
        <appender-ref ref="syslog"/>
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="errorAlarm"/>
        <appender-ref ref="warnAlarm"/>
    </logger>
    <logger name="logger.devices" level="debug" additivity="false">
    </logger>
    <logger name="access" level="info" additivity="false">
        <appender-ref ref="accessLog"/>
        <appender-ref ref="errorAlarm"/>
        <appender-ref ref="warnAlarm"/>
    </logger>
</configuration>