server:
  port: 8886

spring:
  application:
    name: ${app.registry.name:device-network-agent}
  output:
    ansi:
      enabled: always
  servlet:
    multipart:
      max-file-size: 1024MB
      max-request-size: 2048MB
  datasource:
    url: jdbc:sqlite:${app.location}/hydra_lab_agent_db.sqlite
    username: sqlite
    password: 98765432
    driver-class-name: org.sqlite.JDBC
    hikari:
      maximum-pool-size: 1
  jpa:
    database-platform: org.sqlite.hibernate.dialect.SQLiteDialect
    show-sql: false
    hibernate:
      dialect: org.sqlite.hibernate.dialect.SQLiteDialect
      ddl-auto: update
    properties:
      hibernate:
        format_sql: false
        order_inserts: true
        order_updates: true
        jdbc:
          batch_size: 400
          batch_versioned_data: true

logging:
  config: classpath:logback-common.xml
  level:
    org.hibernate.SQL: INFO

app:
  # register to Hydra Lab Center
  registry:
    # The url of Hydra Lab Center. If nginx enabled, switch to port of nginx
    server: "localhost:9886"
#    server: "host.docker.internal:9886"
#    server: "hydradevicenetwork.azurewebsites.net"
    # The Agent info registered in Hydra Lab Center
    id: ${AGENT_ID}
    secret: ${AGENT_SECRET}
    name: ${AGENT_NAME}
#    # Docker
#    id: ${AGENT_ID:d3111900-22ac-4e80-bb39-b6120aa23738}
#    secret: ${AGENT_SECRET:2a10lJ0ujxo8SOO8vnq56vyp8uoHy1GUGrIb8kGdcvp8pHks1wwwBDke}
#    name: ${AGENT_NAME:TestAgent}
#    # local
#    id: ${AGENT_ID:4afc2739-aca0-4a9a-91ef-71604ab7cd7e}
#    secret: ${AGENT_SECRET:2a10uivCJYcO20gKSa9po6KGuOA8lOj5jWDgw1l0qMqNurHIbynt1Mam}
#    name: ${AGENT_NAME:Testtest}
#    # Online
#    id: ${AGENT_ID:7d3738aa-a916-470c-8bb5-9342fe55197d}
#    secret: ${AGENT_SECRET:2a10xNkVkatFYrQmCZR4Cvvmbr8A4pMVnd4f67Sf55WWpmIeRmdk}
#    name: ${AGENT_NAME:SuzhouAgent}
    # Agent Type {1 : 1*WINDOWS + n*ANDROIDS , 2 : 1*WINDOWS+1*ANDROID , 3 : iOS}
    agent-type: ${AGENT_TYPE:1}
  # Device Stability Monitor Configuration
  device:
    state-change:
      count-threshold: ${STATE_CHANGE_COUNT_THRESHOLD:12}
      window-time: ${STATE_CHANGE_WINDOW_TIME:5}
      recovery-time: ${STATE_RECOVERY_TIME:3}
  location: ${user.dir}
# Prometheus Configuration
management:
  endpoints:
    web:
      exposure:
        include: prometheus
      health:
        show-details: always
      metrics:
        tags:
          application: ${spring.application.name}
  metrics:
    export:
      prometheus:
        pushgateway:
          base-url: ${app.registry.server}/prometheus/pushgateway
          enabled: ${PUSHGATEWAY_ENABLED:false}
          job: ${spring.application.name}
          push-rate: 10s
