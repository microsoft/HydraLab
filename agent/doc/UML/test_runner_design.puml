@startuml test_runners_classes
abstract class TestRunner {
    #getDeviceTask(...)
    #chooseDevices(TestTaskSpec)
    +setupTestDir(TestTask)
    +runTest(TestTaskSpec)
    +initDevice(...)
    #afterTest(...)
}
interface TestRunningCallback

AppiumRunner --|> TestRunner
EspressoRunner --|> TestRunner
AdbMonkeyRunner --|> TestRunner
T2CRunner --|> AppiumRunner
SmartRunner --|> TestRunner

TestRunner --> TestRunningCallback

TestRunner *--> DeviceManager

AppiumCrossRunner --|> AppiumRunner
@enduml

@startuml running_sequence
AgentWebSocketClientService -> DeviceControlService :runTestTask
activate DeviceControlService

DeviceControlService -> TestRunner: runTest
activate TestRunner

TestRunner -> TestRunner: chooseDevices
TestRunner -> TestTask: convertToTestTask(static)
TestRunner -> RunningControlService: runForAllDeviceAsync
activate RunningControlService

RunningControlService --> TestThreadPool.Executor: execute
activate TestThreadPool.Executor

RunningControlService -> TestRunner
deactivate RunningControlService

TestRunner -> DeviceControlService
deactivate TestRunner

DeviceControlService -> AgentWebSocketClientService
deactivate DeviceControlService

participant DeviceTask
note over DeviceTask #aqua
DeviceTask
seems
extra.
end note

TestThreadPool.Executor -> DeviceTask: doTask
activate DeviceTask

DeviceTask -> RunnerImpl : runTestImpl
activate RunnerImpl #FFBBFF
note right: each runner implements this logic
RunnerImpl -> DeviceTask
deactivate RunnerImpl


DeviceTask -> TestThreadPool.Executor
deactivate DeviceTask

TestThreadPool.Executor -> TaskCompletion: onComplete
activate TaskCompletion

TaskCompletion -> TestRunningCallback: onAllComplete
activate TestRunningCallback

TestRunningCallback -> TaskCompletion
deactivate TestRunningCallback

TaskCompletion -> TestThreadPool.Executor
deactivate TaskCompletion

@enduml

@startjson
{
    "fileSetId": "006b6ec7-52f9-45c7-84ad-419fc4315134",
    "pkgName": "com.microsoft.appmanager",
    "runningType": "APPIUM_CROSS",
    "testSuiteClass": "com.microsoft.appmanager.longhaultest.suites.SurfaceSmokeTestSuite",
    "deviceIdentifier": "55d93bc7-4d1d-4749-b493-a9de063a8a66",
    "groupTestType": "SINGLE",
    "maxStepCount": "",
    "deviceTestCount": "",
    "testTimeOutSec": "",
    "deviceSetupActions":[{
            "action":"setProperty",
            "args": ["log.tag.WelcomeScreen","Verbose"]
        },
        {
            "action":"setProperty",
            "args": ["log.tag.WelcomeScreen","Verbose"]
        },
        {
            "action":"setLauncherAsDefault",
            "args": ["com.android.launcher3.DefaultLauncherApp"]
        }
    ],
    "deviceTeardownActions":[{
            "action":"setProperty",
            "args": ["log.tag.WelcomeScreen","Verbose"]
        },
        {
            "action":"setProperty",
            "args": ["log.tag.WelcomeScreen","Verbose"]
        },
        {
            "action":"setLauncherAsDefault",
            "args": ["com.android.launcher3.DefaultLauncherApp"]
        }
    ],
    "instrumentationArgs": {
        "enableScreenRecord": false,
        "testInterval": 5000,
        "runtimeUpLimit": 1,
        "recordLatency": true,
        "recordMemory": true,
        "databaseUsername": "teams",
        "databasePassword": "***********",
        "ypcVersion": "1.22112.32.0",
        "oem": "Surface",
        "isReset": false
    },
    "frameworkType": "JUnit4",
    "testRunnerName": "androidx.test.runner.AndroidJUnitRunner"
}
@endjson

@startuml design
abstract class Runner
interface TestRunnerListener {
    onTestCaseStart()
    onTestRunStart()
    onTestSuiteStart()
    onTestCaseEnd()
    onTestRunEnd()
    onTestSuiteEnd()
}

Runner *--> TestRunnerListener
@enduml

@startuml loggers
EachTestDevice *--> DeviceLogger
EachTestTaskOnEachTargetDevice *--> TaskOnDeviceLogger
@enduml

@startuml test_objects

entity (TestTaskSpec)
entity (TestTask)
entity (DeviceTestTask)
entity (AndroidTestUnit)


TestTaskSpec -- TestTask: is mapped to
TestTask *--> DeviceTestTask: contain a list of
DeviceTestTask *--> AndroidTestUnit: contain a list of
@enduml

@startuml test_objects

entity (TestTaskSpec)
entity (TestTask)
entity (DeviceTestResult)
entity (TestUnitResult)
entity (AgentDeviceManager)
entity (DeviceManager)
entity (TestDevice)

AgentDeviceManager *--> DeviceManager

TestTask ... TestDevice: is running on

TestTaskSpec -- TestTask: is mapped to
TestTaskSpec -- TargetedTestDeviceList: contains a list of
TestTask *--> DeviceTestResult: contain a list of
DeviceTestResult *--> TestUnitResult: contain a list of
@enduml