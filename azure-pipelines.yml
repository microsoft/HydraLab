# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- none

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '92d33b90-1673-4b64-8ebb-85de2dfb6b6c'
  imageRepository: 'devicenetwork'
  containerRegistry: 'launcher.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/center/Dockerfile'
  tag: '$(Build.BuildId)'
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '14.x'
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.x'
        addToPath: true
        architecture: 'x64'
    - task: Npm@1
      inputs:
        command: 'install'
        workingDir: 'react'
    - task: Npm@1
      inputs:
        command: 'custom'
        workingDir: 'react'
        customCommand: 'run pub'
    - task: CopyFiles@2
      displayName: Copy smart test to target folder
      inputs:
        SourceFolder: '$(Build.Repository.LocalPath)/$(smartTestProName)/core'
        Contents: '**'
        TargetFolder: '$(Build.Repository.LocalPath)/SmartTest'
    - task: PowerShell@2
      displayName: Download smart test model
      inputs:
        targetType: 'inline'
        script: |
          wget $(topicUrl)
          wget $(screenBertUrl)
          wget $(attachmentUrl)
        workingDirectory: '$(Build.Repository.LocalPath)/SmartTest'
    - task: ExtractFiles@1
      displayName: Package smart test
      inputs:
        archiveFilePatterns: '$(Build.Repository.LocalPath)/SmartTest/Attachment.zip'
        destinationFolder: '$(Build.Repository.LocalPath)/SmartTest/Attachment'
        cleanDestinationFolder: true
        overwriteExistingFiles: false
    - task: ArchiveFiles@2
      displayName: Package smart test
      inputs:
        rootFolderOrFile: '$(Build.Repository.LocalPath)/SmartTest'
        includeRootFolder: true
        archiveType: 'zip'
        archiveFile: '$(Build.Repository.LocalPath)/agent/src/main/resources/SmartTest.zip'
        replaceExistingArchive: true
    - task: PowerShell@2
      displayName: Set center/agent version
      inputs:
        targetType: 'inline'
        script: |
          $PSDefaultParameterValues['*:Encoding'] = 'utf8'
          $hydraVersion = (((((Get-Content "common.gradle") -match "hydraLabVersion = '[0-9.]+'") -replace 'hydraLabVersion = ', '') -replace "'", "") -replace " ","")
          (Get-Content agent/src/main/resources/version.properties) -Replace 'AGENT_VERSION', "$hydraVersion.$(Build.BuildId)"| Set-Content agent/src/main/resources/version.properties
          (Get-Content center/src/main/resources/version.properties) -Replace 'CENTER_VERSION', "$hydraVersion.$(Build.BuildId)"| Set-Content center/src/main/resources/version.properties
        workingDirectory: '$(Build.Repository.LocalPath)'
    - task: Gradle@2
      inputs:
        gradleWrapperFile: 'gradlew'
        tasks: 'center:bootJar'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '11'
        sonarQubeRunAnalysis: false
        spotBugsAnalysis: false
    - task: Gradle@2
      inputs:
        gradleWrapperFile: 'gradlew'
        tasks: 'agent:bootJar'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '11'
        sonarQubeRunAnalysis: false
        spotBugsAnalysis: false
    - task: CopyFiles@2
      enabled: false
      inputs:
        SourceFolder: 'agent/src/main/resources/'
        Contents: 'SmartTest.zip'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
    - task: CopyFiles@2
      inputs:
        SourceFolder: 'center/'
        Contents: 'Dockerfile'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/center_deploy'
    - task: CopyFiles@2
      inputs:
        SourceFolder: 'center/deploy_startup/'
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/center_deploy/deploy_startup'
    - task: CopyFiles@2
      inputs:
        SourceFolder: 'center/build/libs/'
        Contents: '*.jar'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/center_deploy'
    - task: CopyFiles@2
      inputs:
        SourceFolder: 'agent/build/libs/'
        Contents: '*.jar'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/agent_deploy'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'HydraLabRelease'
        publishLocation: 'Container'