# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- none

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  version: '$(Build.BuildId)'
  # Agent VM image name
  vmImageName: 'windows-latest'
  fullBuild: $[ne(variables['Build.Reason'], 'PullRequest')]

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '14.x'
    - task: Npm@1
      inputs:
        command: 'install'
        workingDir: 'react'
    - task: Npm@1
      inputs:
        command: 'custom'
        workingDir: 'react'
        customCommand: 'run pub'
    - task: PowerShell@2
      displayName: Set center/agent version
      inputs:
        targetType: 'inline'
        script: |
          $PSDefaultParameterValues['*:Encoding'] = 'utf8'
          $hydraVersionCode = $(Build.BuildId)
          $hydraVersion = "$(Build.SourceBranchName).$(Build.BuildId)"
          
          (Get-Content agent/src/main/resources/version.properties) -Replace '1000000', "$hydraVersionCode"| Set-Content agent/src/main/resources/version.properties
          (Get-Content agent/src/main/resources/version.properties) -Replace '0.0.0', $hydraVersion| Set-Content agent/src/main/resources/version.properties
          
          (Get-Content center/src/main/resources/version.properties) -Replace '1000000', "$hydraVersionCode"| Set-Content center/src/main/resources/version.properties
          (Get-Content center/src/main/resources/version.properties) -Replace '0.0.0', $hydraVersion| Set-Content center/src/main/resources/version.properties
        workingDirectory: '$(Build.Repository.LocalPath)'
      condition: and(succeeded(), eq(variables.fullBuild, 'true'), contains(variables['Build.SourceBranch'], 'Release/'))
    - task: Gradle@3
      displayName: Run JUnit Test
      inputs:
        gradleWrapperFile: 'gradlew'
        tasks: 'test jacocoRootReport'
        publishJUnitResults: true
        testResultsFiles: '**/TEST-*.xml'
        #codeCoverageToolOption: 'JaCoCo'
        #codeCoverageClassFilesDirectories: 'build/classes/java/main'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.11'
        sonarQubeRunAnalysis: false
        spotBugsAnalysis: false
    - task: PublishCodeCoverageResults@1
      displayName: Publich Code Coverage
      inputs:
        codeCoverageTool: 'JaCoCo'
        summaryFileLocation: 'build/reports/jacoco/jacocoRootReport/*.xml'
        reportDirectory: 'build/reports/jacoco/jacocoRootReport/html'
    - task: Gradle@2
      displayName: Build center
      inputs:
        gradleWrapperFile: 'gradlew'
        tasks: 'center:bootJar'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.11'
        sonarQubeRunAnalysis: false
        spotBugsAnalysis: false
    - task: Gradle@2
      displayName: Build agent
      inputs:
        gradleWrapperFile: 'gradlew'
        tasks: 'agent:bootJar'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.11'
        sonarQubeRunAnalysis: false
        spotBugsAnalysis: false
    - task: CopyFiles@2
      displayName: Copy deploy center files
      inputs:
        SourceFolder: 'center/'
        Contents: 'Dockerfile'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/center_deploy'
      condition: and(succeeded(), eq(variables.fullBuild, 'true'))
    - task: CopyFiles@2
      displayName: Copy deploy center files 2
      inputs:
        SourceFolder: 'center/deploy_startup/'
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/center_deploy/deploy_startup'
      condition: and(succeeded(), eq(variables.fullBuild, 'true'))
    - task: CopyFiles@2
      displayName: Copy center jar
      inputs:
        SourceFolder: 'center/build/libs/'
        Contents: '*.jar'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/center_deploy'
      condition: and(succeeded(), eq(variables.fullBuild, 'true'))
    - task: CopyFiles@2
      displayName: Copy agent jar
      inputs:
        SourceFolder: 'agent/build/libs/'
        Contents: '*.jar'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/agent_deploy'
      condition: and(succeeded(), eq(variables.fullBuild, 'true'))
    - task: PowerShell@2
      displayName: Add Release Tag
      inputs:
        targetType: 'inline'
        script: |
          Write-Host "##vso[build.addbuildtag]Release"
        workingDirectory: '$(Build.Repository.LocalPath)'
      condition: and(succeeded(), eq(variables.fullBuild, 'true'), contains(variables['Build.SourceBranch'], 'Release/'))
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'HydraLabRelease'
        publishLocation: 'Container'
      condition: and(succeeded(), eq(variables.fullBuild, 'true'))