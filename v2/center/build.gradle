plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.microsoft.hydralab'
version = '2.0.0-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}


repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

ext {
    set('springAiVersion', "1.0.0-M1")
}


tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    implementation project(":common")

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    implementation 'org.springframework.ai:spring-ai-azure-openai-spring-boot-starter'
    implementation 'org.springframework.security:spring-security-oauth2-client'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

    implementation 'org.xerial:sqlite-jdbc:3.45.3.0'
    implementation 'org.hibernate.orm:hibernate-community-dialects:6.2.7.Final'

    implementation 'net.sf.ehcache:ehcache:2.10.9.2'

    implementation 'com.microsoft.sqlserver:mssql-jdbc:12.4.2.jre11'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'


}
dependencyManagement {
    imports {
        mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
    }
}
test {
    useJUnitPlatform()
}

import org.apache.tools.ant.taskdefs.condition.Os
String npmCommand = 'npm'
if (Os.isFamily(Os.FAMILY_WINDOWS)) {
    npmCommand = 'npm.cmd'
}
String reactDir = "${projectDir.parentFile.parentFile.absolutePath}${File.separator}react"
task installWebFront(type: Exec, group: 'build') {
    workingDir reactDir
    commandLine npmCommand, 'ci'
}

task buildWebFront(type: Exec, group: 'build', dependsOn: installWebFront) {
    workingDir reactDir
    commandLine npmCommand, 'run', 'pub'
}