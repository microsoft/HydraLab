spring:
  main:
    web-application-type: none
  application:
    name: ${app.registry.name:device-network-agent}
  output:
    ansi:
      enabled: always
  servlet:
    multipart:
      max-file-size: 1024MB
      max-request-size: 2048MB
  datasource:
    url: jdbc:sqlite:${app.location}/hydra_lab_agent_db.sqlite
    username: sqlite
    password: 98765432
    driver-class-name: org.sqlite.JDBC
    hikari:
      maximum-pool-size: 1
  jpa:
    database-platform: org.sqlite.hibernate.dialect.SQLiteDialect
    show-sql: false
    hibernate:
      dialect: org.sqlite.hibernate.dialect.SQLiteDialect
      ddl-auto: update
    properties:
      hibernate:
        format_sql: false
        order_inserts: true
        order_updates: true
        jdbc:
          batch_size: 400
          batch_versioned_data: true

logging:
  config: classpath:logback-common.xml
  level:
    org.hibernate.SQL: INFO

app:
  # register to Hydra Lab Center
  registry:
    # The url of Hydra Lab Center. If nginx enabled, switch to port of nginx
    server: "localhost:9886"
    schema: "wss" # Value: {wss (Default, Only Domain), ws}.
    # The Agent info registered in Hydra Lab Center
    id: ${AGENT_ID}
    secret: ${AGENT_SECRET}
    name: ${AGENT_NAME:default}
  # Device Stability Monitor Configuration
  device:
    auto-reboot:
      android:
        # '0 0 0 * * ?' means every day at 00:00:00
        # '-' means disabled
        cron: '-'
    monitor:
      windows:
        enabled: false
      android:
        enabled: true
      ios:
        enabled: false
    state-change:
      count-threshold: ${STATE_CHANGE_COUNT_THRESHOLD:12}
      window-time: ${STATE_CHANGE_WINDOW_TIME:5}
      recovery-time: ${STATE_RECOVERY_TIME:3}
  location: ${user.dir}
  device-script:
    commands:
  runner:
    analysis:
      enabled: false
# Prometheus Configuration
management:
  endpoints:
    web:
      exposure:
        include: prometheus
      health:
        show-details: always
      metrics:
        tags:
          application: ${spring.application.name}
  metrics:
    export:
      prometheus:
        pushgateway:
          enabled: ${PUSHGATEWAY_ENABLED:false}
          base-url: ${app.registry.server}/prometheus/pushgateway
          job: ${spring.application.name}
          push-rate: 10s

runner:
  smart:
    llm:
      enabled: ${SMART_TEST_LLM_ENABLED:false}
      deployment-name: ${SMART_TEST_LLM_DEPLOYMENT_NAME}
      openai-api-key: ${SMART_TEST_LLM_OPENAI_API_KEY}
      openai-api-base: ${SMART_TEST_LLM_OPENAI_API_BASE}
      openai-api-version: ${SMART_TEST_LLM_OPENAI_API_VERSION}